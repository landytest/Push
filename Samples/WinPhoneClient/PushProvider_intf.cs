//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5472
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinPhoneClient.Intf
{
    using System;
    using RemObjects.SDK;
    using RemObjects.SDK.Types;
    using System.Collections.Generic;

    public interface IWindowsPhonePushProviderService : RemObjects.SDK.IROService
    {
        void RegisterDevice(string deviceId, string pushNotificationURI, string osVersion, string additionalInfo);
        void UnregisterDevice(string deviceId);
    }
    public partial class WindowsPhonePushProviderService_Proxy : RemObjects.SDK.Proxy, IWindowsPhonePushProviderService
    {
        public WindowsPhonePushProviderService_Proxy(RemObjects.SDK.IMessage aMessage, RemObjects.SDK.IClientChannel aClientChannel) :
            base(aMessage, aClientChannel)
        {
        }
        public WindowsPhonePushProviderService_Proxy(RemObjects.SDK.IMessage aMessage, RemObjects.SDK.IClientChannel aClientChannel, string aOverrideInterfaceName) :
            base(aMessage, aClientChannel, aOverrideInterfaceName)
        {
        }
        public WindowsPhonePushProviderService_Proxy(RemObjects.SDK.IRemoteService aRemoteService) :
            base(aRemoteService)
        {
        }
        public WindowsPhonePushProviderService_Proxy(RemObjects.SDK.IRemoteService aRemoteService, string aOverrideInterfaceName) :
            base(aRemoteService, aOverrideInterfaceName)
        {
        }
        public WindowsPhonePushProviderService_Proxy(System.Uri aUri) :
            base(aUri)
        {
        }
        public WindowsPhonePushProviderService_Proxy(string aUrl) :
            base(aUrl)
        {
        }
        [System.CLSCompliantAttribute(false)]
        protected override string @__GetInterfaceName()
        {
            return "WindowsPhonePushProviderService";
        }
        public virtual void RegisterDevice(string deviceId, string pushNotificationURI, string osVersion, string additionalInfo)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            @__LocalMessage.InitializeRequestMessage(@__ClientChannel, "PushProvider", @__GetActiveInterfaceName(), "RegisterDevice");
            @__LocalMessage.WriteAnsiString("deviceId", deviceId);
            @__LocalMessage.WriteAnsiString("pushNotificationURI", pushNotificationURI);
            @__LocalMessage.WriteAnsiString("osVersion", osVersion);
            @__LocalMessage.WriteAnsiString("additionalInfo", additionalInfo);
            @__LocalMessage.FinalizeMessage();
            @__ClientChannel.Dispatch(@__LocalMessage);
            @__LocalMessage.Clear();
        }
        public virtual void UnregisterDevice(string deviceId)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            @__LocalMessage.InitializeRequestMessage(@__ClientChannel, "PushProvider", @__GetActiveInterfaceName(), "UnregisterDevice");
            @__LocalMessage.WriteAnsiString("deviceId", deviceId);
            @__LocalMessage.FinalizeMessage();
            @__ClientChannel.Dispatch(@__LocalMessage);
            @__LocalMessage.Clear();
        }
    }
    public class CoWindowsPhonePushProviderService
    {
        public static IWindowsPhonePushProviderService Create(RemObjects.SDK.IMessage aMessage, RemObjects.SDK.IClientChannel aClientChannel)
        {
            return new WindowsPhonePushProviderService_Proxy(aMessage, aClientChannel);
        }
        public static IWindowsPhonePushProviderService Create(RemObjects.SDK.IRemoteService aRemoteService)
        {
            return new WindowsPhonePushProviderService_Proxy(aRemoteService);
        }
        public static IWindowsPhonePushProviderService Create(System.Uri aUri)
        {
            return new WindowsPhonePushProviderService_Proxy(aUri);
        }
        public static IWindowsPhonePushProviderService Create(string aUrl)
        {
            return new WindowsPhonePushProviderService_Proxy(aUrl);
        }
    }
    public interface IWindowsPhonePushProviderService_Async : RemObjects.SDK.IROService_Async
    {
        System.IAsyncResult BeginRegisterDevice(string deviceId, string pushNotificationURI, string osVersion, string additionalInfo, System.AsyncCallback @__Callback, object @__UserData);
        void EndRegisterDevice(System.IAsyncResult @__AsyncResult);
        System.IAsyncResult BeginUnregisterDevice(string deviceId, System.AsyncCallback @__Callback, object @__UserData);
        void EndUnregisterDevice(System.IAsyncResult @__AsyncResult);
    }
    public partial class WindowsPhonePushProviderService_AsyncProxy : RemObjects.SDK.AsyncProxy, IWindowsPhonePushProviderService_Async
    {
        public WindowsPhonePushProviderService_AsyncProxy(RemObjects.SDK.IMessage aMessage, RemObjects.SDK.IClientChannel aClientChannel) :
            base(aMessage, aClientChannel)
        {
        }
        public WindowsPhonePushProviderService_AsyncProxy(RemObjects.SDK.IMessage aMessage, RemObjects.SDK.IClientChannel aClientChannel, string aOverrideInterfaceName) :
            base(aMessage, aClientChannel, aOverrideInterfaceName)
        {
        }
        public WindowsPhonePushProviderService_AsyncProxy(RemObjects.SDK.IRemoteService aRemoteService) :
            base(aRemoteService)
        {
        }
        public WindowsPhonePushProviderService_AsyncProxy(RemObjects.SDK.IRemoteService aRemoteService, string aOverrideInterfaceName) :
            base(aRemoteService, aOverrideInterfaceName)
        {
        }
        public WindowsPhonePushProviderService_AsyncProxy(System.Uri aUri) :
            base(aUri)
        {
        }
        public WindowsPhonePushProviderService_AsyncProxy(string aUrl) :
            base(aUrl)
        {
        }
        protected override string @__GetInterfaceName()
        {
            return "WindowsPhonePushProviderService";
        }
        public virtual System.IAsyncResult BeginRegisterDevice(string deviceId, string pushNotificationURI, string osVersion, string additionalInfo, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            @__LocalMessage.InitializeRequestMessage(@__ClientChannel, "PushProvider", @__GetActiveInterfaceName(), "RegisterDevice");
            @__LocalMessage.WriteAnsiString("deviceId", deviceId);
            @__LocalMessage.WriteAnsiString("pushNotificationURI", pushNotificationURI);
            @__LocalMessage.WriteAnsiString("osVersion", osVersion);
            @__LocalMessage.WriteAnsiString("additionalInfo", additionalInfo);
            @__LocalMessage.FinalizeMessage();
            return @__ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
        }
        public virtual void EndRegisterDevice(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            @__LocalMessage.Clear();
        }
        public virtual System.IAsyncResult BeginUnregisterDevice(string deviceId, System.AsyncCallback @__Callback, object @__UserData)
        {
            RemObjects.SDK.IMessage @__LocalMessage = this.@__GetMessage();
            @__LocalMessage.InitializeRequestMessage(@__ClientChannel, "PushProvider", @__GetActiveInterfaceName(), "UnregisterDevice");
            @__LocalMessage.WriteAnsiString("deviceId", deviceId);
            @__LocalMessage.FinalizeMessage();
            return @__ClientChannel.AsyncDispatch(@__LocalMessage, @__Callback, @__UserData);
        }
        public virtual void EndUnregisterDevice(System.IAsyncResult @__AsyncResult)
        {
            RemObjects.SDK.IMessage @__LocalMessage = ((RemObjects.SDK.IClientAsyncResult)(@__AsyncResult)).Message;
            @__LocalMessage.Clear();
        }
    }
}